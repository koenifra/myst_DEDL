{"version":2,"kind":"Notebook","sha256":"268c48c731486aa72941c3ed9ddcb770610916ab60b6770d37697b225266d656","slug":"extremedt-parameterplotter-2","location":"/HDA/DestinE_Digital_Twins/ExtremeDT-ParameterPlotter.ipynb","dependencies":[],"frontmatter":{"title":"DEDL - HDA Extreme DT Parameter Plotter - Tutorial","content_includes_title":true,"kernelspec":{"name":"python_dedl","display_name":"Python DEDL","language":"python"},"numbering":{"title":{"offset":2}},"thumbnail":"/b27bd30f978ddf0848f3ea0942070886.jpeg","exports":[{"format":"ipynb","filename":"ExtremeDT-ParameterPlotter.ipynb","url":"/ExtremeDT-ParameterP-446457699b74d25f34a0d14207646c2e.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"image","url":"/b27bd30f978ddf0848f3ea0942070886.jpeg","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jGirZodzcz","urlSource":"https://github.com/destination-earth/DestinE-DataLake-Lab/blob/main/img/DestinE-banner.jpg?raw=true"}],"visibility":"show","key":"skjjpOFhdD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"DEDL - HDA Extreme DT Parameter Plotter - Tutorial","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TzfPP0afLv"}],"identifier":"dedl-hda-extreme-dt-parameter-plotter-tutorial","label":"DEDL - HDA Extreme DT Parameter Plotter - Tutorial","html_id":"dedl-hda-extreme-dt-parameter-plotter-tutorial","implicit":true,"key":"ZMZVlm27O3"}],"key":"tSYushWBgX"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Author","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fqsJf9f02n"}],"key":"pTTU1I1gSJ"},{"type":"text","value":": EUMETSAT ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qJmD4Ci682"},{"type":"break","key":"J5zgsQNDaX"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ivGRbhwgS1"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Copyright","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"t7whTD9Zw3"}],"key":"sxkBjsuAL2"},{"type":"text","value":": 2024 EUMETSAT ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a35KvSeWtf"},{"type":"break","key":"GaAEpqfPKW"},{"type":"text","value":"\n","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BAfcsVru9g"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Licence","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"osQU3YEbOp"}],"key":"nIcSJtLCp6"},{"type":"text","value":": MIT ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"movTwN1px9"},{"type":"break","key":"xltpRQWrpl"}],"key":"nBBsUo4qrF"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Credit","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IxfKuMgjt3"}],"key":"c9hpXZwFnc"},{"type":"text","value":": Earthkit and HDA Polytope used in this context are both packages provided by the European Centre for Medium-Range Weather Forecasts (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nn0Cptza5B"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"ECMWF","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"V9ycpILNMI"}],"key":"UxxBmEXHd4"},{"type":"text","value":").","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DrM0x3fcUd"}],"key":"z8eRfUg0nn"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"DEDL Harmonised Data Access is used in this example to access and plot Extreme DT parameter.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GzjktEs96x"}],"key":"MgZ6c0dC08"}],"key":"vA2Dh1HfOU"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"link","url":"https://destine-data-lake-docs.data.destination-earth.eu/en/latest/dedl-discovery-and-data-access/Introduction-to-Discovery-and-Data-Access-services/Introduction-to-Discovery-and-Data-Access-services.html#hda-harmonised-data-access","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Documentation DestinE DataLake HDA","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ONjwAU4Gqu"}],"urlSource":"https://destine-data-lake-docs.data.destination-earth.eu/en/latest/dedl-discovery-and-data-access/Introduction-to-Discovery-and-Data-Access-services/Introduction-to-Discovery-and-Data-Access-services.html#hda-harmonised-data-access","key":"mzCx5RPvDk"}],"key":"Jcp4Y5eWcF"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://confluence.ecmwf.int/display/DDCZ/DestinE+Parameter+Portfolios","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Documentation Digital Twin - Parameter Usage","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OtAUYhWrR0"}],"urlSource":"https://confluence.ecmwf.int/display/DDCZ/DestinE+Parameter+Portfolios","key":"PgEcVGZ8nc"}],"key":"lHA8Ja7bki"}],"visibility":"show","key":"zusF2NdCGF"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the required packages","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YtXoJDduMV"}],"identifier":"import-the-required-packages","label":"Import the required packages","html_id":"import-the-required-packages","implicit":true,"key":"z8me197Xbf"}],"visibility":"show","key":"Rqx3H7aEcA"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the Climate DT parameter & scenario dictionary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bi8a8By67d"}],"key":"mGcvVrdGlw"}],"key":"cTJNeliuJ4"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from destinelab import extreme_dt_dictionary\nimport ipywidgets as widgets\nimport json\nfrom datetime import datetime, timedelta","visibility":"show","key":"zmy64kvmwn"},{"type":"output","id":"KmK5_nZ0Fi7TQvC0n-njX","data":[],"visibility":"show","key":"pIRL0Dx9y3"}],"visibility":"show","key":"amwsZC7LPn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Extreme DT parameter selection (we limit the plotting to one parameter)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sY7KbrU5kp"}],"identifier":"extreme-dt-parameter-selection-we-limit-the-plotting-to-one-parameter","label":"Extreme DT parameter selection (we limit the plotting to one parameter)","html_id":"extreme-dt-parameter-selection-we-limit-the-plotting-to-one-parameter","implicit":true,"key":"IdQbIaUK4j"}],"key":"cbhAH6ToD0"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Create search box\nsearch_box = widgets.Text(placeholder='Search by parameter name', description='Search:', disabled=False)\n\n# Create dropdown to select entry\nentry_dropdown = widgets.Dropdown(\n    options=[(entry['paramName'], i) for i, entry in enumerate(extreme_dt_dictionary.extremeDT_params)],\n    description='Select Entry:'\n)\n\ndef filter_entries(search_string):\n    return [(entry['paramName'], i) for i, entry in enumerate(extreme_dt_dictionary.extremeDT_params) if search_string.lower() in entry['paramName'].lower()]\n\ndef on_search_change(change):\n    search_string = change.new\n    if search_string:\n        filtered_options = filter_entries(search_string)\n        entry_dropdown.options = filtered_options\n    else:\n        entry_dropdown.options = [(entry['paramName'], i) for i, entry in enumerate(extreme_dt_dictionary.extremeDT_params)]\n\nsearch_box.observe(on_search_change, names='value')\n\n# Display widgets\ndisplay(search_box, entry_dropdown)\n\ndef get_selected_entry():\n    return entry_dropdown.value\n","visibility":"show","key":"oRzRfqQJNN"},{"type":"output","id":"HCN_A85x4BCiYnxGoDe90","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"b61a31f14c264f93bea65ff19388fb7d\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"Text(value='', description='Search:', placeholder='Search by parameter name')","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"8d923e0a8d65427b8ae00554faf42349\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"Dropdown(description='Select Entry:', options=(('Sea ice area fraction', 0), ('Sea surface temperature', 1), (…","content_type":"text/plain"}}}],"visibility":"show","key":"JyB7K5VObM"}],"visibility":"show","key":"RJhWNA6X4h"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print the details of the parameter (Polytope convention):","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PIzx7alsnz"}],"identifier":"print-the-details-of-the-parameter-polytope-convention","label":"Print the details of the parameter (Polytope convention):","html_id":"print-the-details-of-the-parameter-polytope-convention","implicit":true,"key":"SpCb3MkLTq"}],"visibility":"show","key":"jvZPNj2DKz"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"\nselected_index = get_selected_entry()\nselected_entry = extreme_dt_dictionary.extremeDT_params[selected_index]\nprint(json.dumps(selected_entry,indent=4))","visibility":"show","key":"y478RzkI01"},{"type":"output","id":"1DVwFW-mJeSQpXOmYQEjB","data":[{"name":"stdout","output_type":"stream","text":"{\n    \"param\": \"167\",\n    \"paramName\": \"2 metre temperature\",\n    \"shortName\": \"2t\",\n    \"unit\": \"K\",\n    \"encoding\": \"instantaneous\",\n    \"stream\": \"oper\",\n    \"type\": \"fc\",\n    \"levtype\": \"sfc\",\n    \"step\": \"0/1/to/96\",\n    \"levelist\": \"\"\n}\n"}],"visibility":"show","key":"uVnJuo2fdv"}],"visibility":"show","key":"j0ox3n0Gex"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Select the Date of Observation to be selected","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gmz7qWhSTG"}],"identifier":"select-the-date-of-observation-to-be-selected","label":"Select the Date of Observation to be selected","html_id":"select-the-date-of-observation-to-be-selected","implicit":true,"key":"ltMEh4lxV6"}],"key":"KwWmgACKCO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Extremes DT data that is older than 15 days is archived, below it is then possible to choose only dates in the last 15 days.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hPwz2j5RiD"}],"key":"Z7PpP21q0N"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To choose your date, please consider also the current Extremes DT data availability. Extremes DT data availability can be find out using the ExtremeDT-dataAvailability.ipynb in this folder.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Y4LxUHSt5C"}],"key":"xQXcLiIuTl"}],"key":"zABMLgi6zb"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from datetime import datetime, timedelta\n\n# Get the current date and time in UTC\ncurrent_date = datetime.utcnow()\n\n# Calculate the date 15 days before the current date\ndate_15_days_ago = current_date - timedelta(days=15)\n\n# Format the date as YYYYMMDD and set the time to 0000 UTC\nformatted_date = date_15_days_ago.strftime('%Y%m%d') + '0000'\n# Convert the formatted date back to a datetime object\ndate_from = datetime.strptime(formatted_date, '%Y%m%d%H%M%S').date()\n\n# Format the date as YYYYMMDD and set the time to 0000 UTC\nformatted_date = current_date.strftime('%Y%m%d') + '0000'\n# Convert the formatted date back to a datetime object\ndate_to = datetime.strptime(formatted_date, '%Y%m%d%H%M%S').date()","visibility":"show","key":"cwyaiZZPBm"},{"type":"output","id":"tHmA0g0VIz-mdwwCHPSlB","data":[],"visibility":"show","key":"PKME0harNi"}],"visibility":"show","key":"F1kbcCHjy8"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from ipywidgets import Label\n# Create dropdown to select scenario\nscenario_dropdown = widgets.Dropdown(\n    options=[(f\"{entry['model']}\", (i)) for i, entry in enumerate(extreme_dt_dictionary.extremeDT_scenario)],\n    description='Scenario:'\n)\n\n# Create date picker widgets\nstart_date_picker = widgets.DatePicker(description='Start Date:', disabled=False)\n\ndef on_scenario_change(change):\n    print(\"scenario_change\")\n    selected_index = change.new\n    selected_entry = extreme_dt_dictionary.extremeDT_scenario[selected_index]\n    start_date_picker.min = date_from\n    start_date_picker.max = date_to\n    # Set the initial date of the start_date_picker to the scenario's start date\n    start_date_picker.value = date_to\n    selected_start_date = start_date_picker.value\n    \nscenario_dropdown.observe(on_scenario_change, names='value')\n\n# Set initial values directly\nselected_entry = extreme_dt_dictionary.extremeDT_scenario[0]\n\n# Set initial values directly\nstart_date_picker.min = date_from\nstart_date_picker.max = date_to\nstart_date_picker.value = date_to\n\n# Display widgets\n\ndef get_selected_values():\n    selected_scenario_index = scenario_dropdown.value\n    selected_scenario = extreme_dt_dictionary.extremeDT_scenario[selected_scenario_index]\n    selected_start_date = start_date_picker.value\n    return selected_scenario_index, selected_scenario, selected_start_date\n\n# Display widgets\ndisplay(Label(\"To choose your date, please consider the current Extremes DT data availability (ExtremeDT-dataAvailability.ipynb in this folder).\"),scenario_dropdown,  start_date_picker)\n\n# Example usage:\nselected_scenario_index, selected_scenario, selected_start_date = get_selected_values()\n","visibility":"show","key":"YXhyGMqVuG"},{"type":"output","id":"k76HLa4wO9cdGH8sTlCM7","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"2200ebba0405440f9497d896a9983897\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"Label(value='To choose your date, please consider the current Extremes DT data availability (ExtremeDT-dataAva…","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"3fed750ea568494989587524b5f8a6e4\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"Dropdown(description='Scenario:', options=(('IFS-NEMO', 0),), value=0)","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"41a81899a869429290ea7e95a52a8a73\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"DatePicker(value=datetime.date(2025, 5, 9), description='Start Date:', max=datetime.date(2025, 5, 9), min=date…","content_type":"text/plain"}}}],"visibility":"show","key":"JtPI1VPyek"}],"visibility":"show","key":"Wa0onNBYNP"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Choose now the Steps within the observation to be retrieved (one step usually one hour)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lGM2gMldm1"}],"identifier":"choose-now-the-steps-within-the-observation-to-be-retrieved-one-step-usually-one-hour","label":"Choose now the Steps within the observation to be retrieved (one step usually one hour)","html_id":"choose-now-the-steps-within-the-observation-to-be-retrieved-one-step-usually-one-hour","implicit":true,"key":"fppruSu44Q"}],"key":"zP3m8K4Wxo"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"selected_entry = extreme_dt_dictionary.extremeDT_params[selected_index]\ninput_string = selected_entry[\"step\"]\n\ndef parse_input_string(input_string):\n    ranges = input_string.split('/')\n    step_start = \"\"\n    step_end = \"\"\n    step_width = 1\n    hypen = \"\"\n    options = []\n    for rng in ranges:\n        if rng:\n            if '-' in rng:\n                hypen = \"-\"\n                start, end = rng.split('-')\n                step_width = int(end) - int(start)\n                if step_start == \"\":\n                    step_start = int(start.strip())\n                step_end = int(end.strip())\n            elif 'to' not in rng:\n                if step_start == \"\":\n                    step_start = int(rng.strip())\n                step_end = int(rng.strip())\n                #options.append(option)\n    #print(str(step_start) + \":\" + str(step_end))\n    if hypen != \"\":\n        options.extend([f\"{i}-{i+step_width}\" for i in range(step_start, step_end, step_width)])\n    else:\n        options.extend([f\"{i}\" for i in range(step_start, step_end+1, step_width)])\n    return options\n\ndef get_selected_step_values():\n    selected_values = multi_select.value\n    selected_values_string = \"/\".join(selected_values)\n    return selected_values_string\n\noptions = parse_input_string(input_string)\n\nmulti_select = widgets.SelectMultiple(\n    options=options,\n    description='Select (Steps):',\n    disabled=False\n)\n\ndisplay(multi_select)\n","visibility":"show","key":"vtsX24C1Iv"},{"type":"output","id":"icQ7ssFpQg5lorVsvKeVO","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"328f6392006f477a9aa90e22c9fb054b\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"SelectMultiple(description='Select (Steps):', options=('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',…","content_type":"text/plain"}}}],"visibility":"show","key":"Lo6sHgflKF"}],"visibility":"show","key":"Sz86b7fEP4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Handle different Levels to be selected (if any)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ravclh6vhf"}],"identifier":"handle-different-levels-to-be-selected-if-any","label":"Handle different Levels to be selected (if any)","html_id":"handle-different-levels-to-be-selected-if-any","implicit":true,"key":"DYYP6CfImb"}],"key":"jdHZwWbddY"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define a global variable\nglobal global_widget\nglobal_widget = None\n\nif selected_entry[\"levelist\"] != \"\":\n    # Convert levelist string to list of integers\n    levelist = list(map(int, selected_entry[\"levelist\"].split('/')))\n\n      \n    # Create a function to generate the widget based on the selection mode\n    def generate_widget(selection_mode):\n        global global_widget\n        if selection_mode == 'Single':\n            global_widget = widgets.Dropdown(options=levelist, description='Select level:')\n            return global_widget\n        elif selection_mode == 'Multiple':\n            global_widget = widgets.SelectMultiple(options=levelist, description='Select levels:')\n            return global_widget\n\n    # Create a dropdown widget to choose selection mode\n    selection_mode_dropdown = widgets.Dropdown(options=['Single', 'Multiple'], description='Selection Mode:')\n\n    # Create an output widget to display the selected option(s)\n    output = widgets.Output()\n\n    # Function to display the widget based on the selection mode\n    def display_widget(selection_mode):\n        output.clear_output()\n        with output:\n            display(generate_widget(selection_mode))\n\n    # Define a function to handle the change in selection mode\n    def on_dropdown_change(change):\n        display_widget(change.new)\n\n    # Register the function to handle dropdown changes\n    selection_mode_dropdown.observe(on_dropdown_change, names='value')\n\n    # Display the widgets\n    display(selection_mode_dropdown, output)\n\n    # Display the initial widget based on default selection mode\n    display_widget('Single')","visibility":"show","key":"QmlKkjQGik"},{"type":"output","id":"CTLOz5EpKZJrsZ38O6dfb","data":[],"visibility":"show","key":"rSxmLBq1oB"}],"visibility":"show","key":"AJ0AK3ymsj"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Function to convert tuple or single integer to string separated by \"/\"\ndef convert_to_string(input):\n    if isinstance(input, tuple):\n        return '/'.join(map(str, input))\n    elif isinstance(input, int):\n        return str(input)\n    else:\n        return None  # Handle other types if needed\n\nlevlInput = \"\"\nif global_widget != None:\n    # Test cases\n    levlInput = convert_to_string(global_widget.value)\n","visibility":"show","key":"eyEYPAiX50"},{"type":"output","id":"0dyZbp47PMNMI3wymPCTP","data":[],"visibility":"show","key":"GNpdWzygDW"}],"visibility":"show","key":"uRCA66OipS"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Call get_selected_values after the display is finished\nselected_step_values = get_selected_step_values()\n\n# Print the result in JSON format\n#datechoice = get_selected_values()[2].strftime('%Y%m%d')\ndatechoice = \"{fname}T00:00:00Z\".format(fname = get_selected_values()[2])\n\nfilter_params = {\n  \"class\": \"d1\",                       # fixed \n  \"dataset\": \"extremes-dt\",             # fixed extreme-dt access\n  \"expver\": \"0001\",                    # fixed experiment version \n  \"stream\": selected_entry[\"stream\"],\n  \"type\": \"fc\",                        # fixed forecasted fields\n#  \"date\": datechoice,                  # choose the date\n  \"time\": \"0000\",                      # fixed \n  \"step\": selected_step_values,        # step choice \n  \"levtype\": selected_entry[\"levtype\"],  \n  \"levelist\": str(levlInput),  \n  \"param\": str(selected_entry[\"param\"]),  \n}\n\n# Print the result in JSON format\nprint(datechoice)\nprint(json.dumps(filter_params, indent=4))","visibility":"show","key":"Uvh4QRkd8r"},{"type":"output","id":"VFm0c5sJ5U0xYehNkEf6e","data":[{"name":"stdout","output_type":"stream","text":"2025-05-08T00:00:00Z\n{\n    \"class\": \"d1\",\n    \"dataset\": \"extremes-dt\",\n    \"expver\": \"0001\",\n    \"stream\": \"oper\",\n    \"type\": \"fc\",\n    \"time\": \"0000\",\n    \"step\": \"0/1\",\n    \"levtype\": \"sfc\",\n    \"levelist\": \"\",\n    \"param\": \"167\"\n}\n"}],"visibility":"show","key":"BXZmYLdG9O"}],"visibility":"show","key":"krHU2d6Qwd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Obtain Authentication Token","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"h8sTw3lib0"}],"identifier":"obtain-authentication-token","label":"Obtain Authentication Token","html_id":"obtain-authentication-token","implicit":true,"key":"FyvdAwpGWE"}],"key":"pT0IzWUu9S"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import requests\nfrom requests.adapters import HTTPAdapter\nfrom urllib3.util.retry import Retry\nimport json\nimport os\nfrom getpass import getpass\nimport destinelab as deauth","visibility":"show","key":"sFsAD9j1L5"},{"type":"output","id":"5KEpQlPtcaY9jo4YM5B4p","data":[],"visibility":"show","key":"FIOgEk4ADn"}],"visibility":"show","key":"Uls4Uwv8tL"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"DESP_USERNAME = input(\"Please input your DESP username: \")\nDESP_PASSWORD = getpass(\"Please input your DESP password: \")\n\nauth = deauth.AuthHandler(DESP_USERNAME, DESP_PASSWORD)\naccess_token = auth.get_token()\nif access_token is not None:\n    print(\"DEDL/DESP Access Token Obtained Successfully\")\nelse:\n    print(\"Failed to Obtain DEDL/DESP Access Token\")\n\nauth_headers = {\"Authorization\": f\"Bearer {access_token}\"}","visibility":"show","key":"eEyALiIvPD"},{"type":"output","id":"uNiE41bm8ghJvQZjcxeQM","data":[{"name":"stdin","output_type":"stream","text":"Please input your DESP username:  eum-dedl-user\nPlease input your DESP password:  ········\n"},{"name":"stdout","output_type":"stream","text":"Response code: 200\nDEDL/DESP Access Token Obtained Successfully\n"}],"visibility":"show","key":"GPypc0SW20"}],"visibility":"show","key":"x0v8qsDg5f"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Check if DT access is granted","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rEUoc6Ynbl"}],"identifier":"check-if-dt-access-is-granted","label":"Check if DT access is granted","html_id":"check-if-dt-access-is-granted","implicit":true,"key":"lFFyE6afOh"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If DT access is not granted, you will not be able to execute the rest of the notebook.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wnrpx75Jsh"}],"key":"B4OJuU2496"}],"key":"m8gZ62ar2D"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import importlib\ninstalled_version = importlib.metadata.version(\"destinelab\")\nversion_number = installed_version.split('.')[1]\nif((int(version_number) >= 8 and float(installed_version) < 1) or float(installed_version) >= 1):\n    auth.is_DTaccess_allowed(access_token)","visibility":"show","key":"CG8tNJkVnz"},{"type":"output","id":"m7-LQqdBZRAHMyLQ-yBk5","data":[{"name":"stdout","output_type":"stream","text":"DT Output access allowed\n"}],"visibility":"show","key":"Ob9aVjDLWg"}],"visibility":"show","key":"YM6R2ZonYp"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Query using the DEDL HDA API","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NjvQqnzYa2"}],"identifier":"query-using-the-dedl-hda-api","label":"Query using the DEDL HDA API","html_id":"query-using-the-dedl-hda-api","implicit":true,"key":"jSoGLa2yKl"}],"key":"gF1ni3Jqvk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Filter","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eCkVldbHvG"}],"identifier":"filter","label":"Filter","html_id":"filter","implicit":true,"key":"Ui8xJrUlew"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We have to setup up a filter and define which data to obtain.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HGMhNIZmVF"}],"key":"MFx5MjWJAc"}],"key":"OzMwBUFoXQ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Check if levelist is empty and remove it\nif filter_params.get(\"levelist\") == \"\":\n    del filter_params[\"levelist\"]\n   \nhdaFilters = {\n    key: {\"eq\": value}\n    for key, value in filter_params.items()\n}\n\n#print(hdaFilters)\n\n","visibility":"show","key":"NkcEpznyfi"},{"type":"output","id":"C2J38eyy3nDXKhrXN9WLN","data":[],"visibility":"show","key":"vOwoB4tcKp"}],"visibility":"show","key":"bcixOt9Pjs"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Make Data Request","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wDiVUF2Yzr"}],"identifier":"make-data-request","label":"Make Data Request","html_id":"make-data-request","implicit":true,"key":"HV4JcTcKWT"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Please repeat this call is you have a timeout failure (under investion in the moment)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"z19pKDPlTY"}],"key":"zcxZ0HHDlI"}],"visibility":"show","key":"H7SzjFl6w0"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"#Sometimes requests to polytope get timeouts, it is then convenient define a retry strategy\nretry_strategy = Retry(\n    total=5,  # Total number of retries\n    status_forcelist=[500, 502, 503, 504],  # List of 5xx status codes to retry on\n    allowed_methods=[\"GET\",'POST'],  # Methods to retry\n    backoff_factor=1  # Wait time between retries (exponential backoff)\n)\n\n# Create an adapter with the retry strategy\nadapter = HTTPAdapter(max_retries=retry_strategy)\n\n# Create a session and mount the adapter\nsession = requests.Session()\nsession.mount(\"https://\", adapter)\n\nresponse = session.post(\"https://hda.data.destination-earth.eu/stac/search\", headers=auth_headers, json={\n \"collections\": [\"EO.ECMWF.DAT.DT_EXTREMES\"],\n    \"datetime\": datechoice,\n    \"query\": hdaFilters\n})\n\n# Requests to EO.ECMWF.DAT.DT_EXTREMES always return a single item containing all the requested data\n#print(response.json())\nproduct = response.json()[\"features\"][0]\nproduct[\"id\"]","visibility":"show","key":"nj7ADasR4T"},{"type":"output","id":"UtqealJiJbnd3Z2mzvPnU","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"'DT_EXTREMES_20250508_20250508_4f2a321575e01d5094ab9e23ed5e21052f4b79f7'","content_type":"text/plain"}}}],"visibility":"show","key":"FxrAhZmEtI"}],"visibility":"show","key":"IJegYv9Yot"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Submission worked ? Once our product found, we download the data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zgZ9ITdLtH"}],"identifier":"submission-worked-once-our-product-found-we-download-the-data","label":"Submission worked ? Once our product found, we download the data.","html_id":"submission-worked-once-our-product-found-we-download-the-data","implicit":true,"key":"zaetuZMl16"}],"key":"ggQR1iPf5I"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# DownloadLink is an asset representing the whole product\ndownload_url = product[\"assets\"][\"downloadLink\"][\"href\"]\nHTTP_SUCCESS_CODE = 200\nHTTP_ACCEPTED_CODE = 202\n\ndirect_download_url=''\n\nresponse = session.get(download_url, headers=auth_headers)\nif (response.status_code == HTTP_SUCCESS_CODE):\n    direct_download_url = product['assets']['downloadLink']['href']\nelif (response.status_code != HTTP_ACCEPTED_CODE):\n    print(response.text)\nprint(download_url)\nresponse.raise_for_status()\n    ","visibility":"show","key":"bqeZx1RjYe"},{"type":"output","id":"jXM6sB_EfVR3_A3osULeK","data":[{"name":"stdout","output_type":"stream","text":"https://hda.data.destination-earth.eu/stac/collections/EO.ECMWF.DAT.DT_EXTREMES/items/DT_EXTREMES_20250508_20250508_4f2a321575e01d5094ab9e23ed5e21052f4b79f7/download?provider=dedt_lumi&_dc_qs=%257B%2522class%2522%253A%2B%2522d1%2522%252C%2B%2522dataset%2522%253A%2B%2522extremes-dt%2522%252C%2B%2522date%2522%253A%2B%252220250508%252Fto%252F20250508%2522%252C%2B%2522expver%2522%253A%2B%25220001%2522%252C%2B%2522levtype%2522%253A%2B%2522sfc%2522%252C%2B%2522param%2522%253A%2B%2522167%2522%252C%2B%2522step%2522%253A%2B%25220%252F1%2522%252C%2B%2522stream%2522%253A%2B%2522oper%2522%252C%2B%2522time%2522%253A%2B%25220000%2522%252C%2B%2522type%2522%253A%2B%2522fc%2522%257D\n"}],"visibility":"show","key":"D3MJDQZxJ3"}],"visibility":"show","key":"TNrdIRbNug"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Wait until data is there","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GL0xx0kpk6"}],"identifier":"wait-until-data-is-there","label":"Wait until data is there","html_id":"wait-until-data-is-there","implicit":true,"key":"ARphQMGzr9"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This data is not available at the moment. And we can see that our request is in ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"R8o5uPYBVD"},{"type":"inlineCode","value":"queued","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fwX3J3UEEf"},{"type":"text","value":"status.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pMuIdCVnTK"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"o9UMkxRg8V"},{"type":"text","value":"We will now poll the API until the data is ready and then download it.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vIHKrmwCmg"}],"key":"c3hf3HRYjh"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Please note that the basic HDA quota allows a maximum of 4 requests per second. The following code limits polling to this quota.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"IvK9AEHtos"}],"key":"FzlJbiC7DM"}],"key":"IlDCtOODj0"}],"key":"ZK22HOKNNB"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"pip install ratelimit --quiet","visibility":"show","key":"riIzm7tmdA"},{"type":"output","id":"kTzt-yPt_G-5xaLsr4N2J","data":[{"name":"stdout","output_type":"stream","text":"Note: you may need to restart the kernel to use updated packages.\n"}],"visibility":"show","key":"v7mJnSGd2U"}],"visibility":"show","key":"EzHrNSMzVs"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from tqdm import tqdm\nimport time\nimport re\nfrom ratelimit import limits, sleep_and_retry\n\n# Set limit: max 4 calls per 1 seconds\nCALLS = 4\nPERIOD = 1  # seconds\n\n@sleep_and_retry\n@limits(calls=CALLS, period=PERIOD)\ndef call_api(url,auth_headers):\n    response = session.get(url, headers=auth_headers, stream=True)\n    return response\n\n# we poll as long as the data is not ready\nif direct_download_url=='':\n    while url := response.headers.get(\"Location\"):\n        print(f\"order status: {response.json()['status']}\")\n        response = call_api(url,auth_headers)\n\nif (response.status_code not in (HTTP_SUCCESS_CODE,HTTP_ACCEPTED_CODE)):\n     (print(response.text))\n\n# Check if Content-Disposition header is present\nif \"Content-Disposition\" not in response.headers:\n    print(response)\n    print(response.text)\n    raise Exception(\"Headers: \\n\"+str(response.headers)+\"\\nContent-Disposition header not found in response. Must be something wrong.\")\n        \nfilename = re.findall('filename=\\\"?(.+)\\\"?', response.headers[\"Content-Disposition\"])[0]\ntotal_size = int(response.headers.get(\"content-length\", 0))\n\nprint(f\"downloading {filename}\")\n\nwith tqdm(total=total_size, unit=\"B\", unit_scale=True) as progress_bar:\n    with open(filename, 'wb') as f:\n        for data in response.iter_content(1024):\n            progress_bar.update(len(data))\n            f.write(data)","visibility":"show","key":"ZD8HLvhYxo"},{"type":"output","id":"uvDjkZEvDQHHgXljJXS20","data":[{"name":"stdout","output_type":"stream","text":"order status: queued\ndownloading 79938f75-be7f-49d7-af32-7127d00c8d87.grib\n"},{"name":"stderr","output_type":"stream","text":"100%|██████████| 104M/104M [00:04<00:00, 24.8MB/s] \n"}],"visibility":"show","key":"HLN1h2ctxW"}],"visibility":"show","key":"WvWEpbrbBd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"EarthKit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g5SfUyXa0u"}],"identifier":"earthkit","label":"EarthKit","html_id":"earthkit","implicit":true,"key":"pmWPRFgjmo"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Lets plot the result file\n[EarthKit Documentation] ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hb7cR4MHAi"},{"type":"link","url":"https://earthkit-data.readthedocs.io/en/latest/index.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"https://​earthkit​-data​.readthedocs​.io​/en​/latest​/index​.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Heqm4EmbJ7"}],"urlSource":"https://earthkit-data.readthedocs.io/en/latest/index.html","key":"yBG1umE7k1"}],"key":"sXftf2opXo"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"This section requires that you have ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"rKHBsUWVNe"},{"type":"inlineCode","value":"ecCodes >= 2.35","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"TA6Q6Af3Vy"},{"type":"text","value":" installed on your system.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"M0miqAdhca"},{"type":"break","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"kK6KcMY8Ap"},{"type":"text","value":"You can follow the installation procedure at ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"OlkbA2dweN"},{"type":"link","url":"https://confluence.ecmwf.int/display/ECC/ecCodes+installation","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"https://​confluence​.ecmwf​.int​/display​/ECC​/ecCodes+installation","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"iTYso8ujoG"}],"urlSource":"https://confluence.ecmwf.int/display/ECC/ecCodes+installation","key":"y4yGmuwtH8"}],"key":"rqq2SgaAwB"}],"key":"cpDTY6HX5g"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import earthkit.data\nimport earthkit.maps\nimport earthkit.regrid","visibility":"show","key":"EFSLIKBfbq"},{"type":"output","id":"IxdqZetJuw7OiL5jfhFnX","data":[],"visibility":"show","key":"t4BPYQMmQj"}],"visibility":"show","key":"GxGZoyJVFj"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"data = earthkit.data.from_source(\"file\", filename)\ndata.ls\n\nearthkit.maps.quickplot(data, #style=style\n                       )","visibility":"show","key":"RQAhqbkXui"},{"type":"output","id":"WkySLVO7PdKk2t-Qz_T0r","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"372c4b062c28416e4cca804d4b319f61","path":"/372c4b062c28416e4cca804d4b319f61.png"},"text/plain":{"content":"<Figure size 900x750 with 4 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"K3WGvHj201"}],"visibility":"show","key":"duhbpTMkf7"}],"key":"QB8IlrRzN1"},"references":{"cite":{"order":[],"data":{}}}}